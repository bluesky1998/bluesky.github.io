<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>QAT</title>
      <link href="/2022/06/30/qat/"/>
      <url>/2022/06/30/qat/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>neon</title>
      <link href="/2022/06/30/neon/"/>
      <url>/2022/06/30/neon/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>opencv-video</title>
      <link href="/2022/06/25/opencv-video/"/>
      <url>/2022/06/25/opencv-video/</url>
      
        <content type="html"><![CDATA[<p>这里主要是解决arm架构下opencv读取视频时出现以下问题：<br>unable to stop the stream:Inappropriate ioctl for device<br>主要的原因是交叉编译opencv时没有选择with ffmpeg或者即使选择了在编译时未找到ffmpeg</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="1-交叉编译x264，原因是ffmpeg依赖x264"><a href="#1-交叉编译x264，原因是ffmpeg依赖x264" class="headerlink" title="1.交叉编译x264，原因是ffmpeg依赖x264"></a>1.交叉编译x264，原因是ffmpeg依赖x264</h3><p>下载版本x264-snapshot-20180101-2245-stable,最新版本可能存在编译问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://ftp.videolan.org/pub/x264/snapshots/x264-snapshot-20180101-2245-stable.tar.bz2 --no-check-certificate</span><br></pre></td></tr></table></figure><p>解压 cd, 后命令行export PATH&#x3D;$PATH:(arm-gcc目录)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure  --cross-prefix=arm-ca9-linux-gnueabihf- --host=arm-ca9-linux-gnueabihf --prefix=`<span class="built_in">pwd</span>`/build --enable-shared </span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="2-交叉编译ffmpeg-注意版本，特别是要和opencv版本之间对齐，最好选择旧的版本"><a href="#2-交叉编译ffmpeg-注意版本，特别是要和opencv版本之间对齐，最好选择旧的版本" class="headerlink" title="2.交叉编译ffmpeg,注意版本，特别是要和opencv版本之间对齐，最好选择旧的版本"></a>2.交叉编译ffmpeg,注意版本，特别是要和opencv版本之间对齐，最好选择旧的版本</h3><p>下载页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ffmpeg.org/download.html<span class="comment">#releases</span></span><br></pre></td></tr></table></figure><p>选择FFmpeg 2.8.17版本<br>解压cd ~&#x2F;ffmpeg-2.8.17&#x2F; (动态库需要加入enable-shared)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=~/ffmpeg/arm-ca9 --enable-static --enable-cross-compile --<span class="built_in">arch</span>=arm --target-os=linux --cc=arm-ca9-linux-gnueabihf-gcc --ranlib=arm-ca9-linux-gnueabihf-gcc-ranlib --enable-libx264 --enable-avresample --enable-gpl --enable-pthreads  --disable-stripping --ar=arm-ca9-linux-gnueabihf-ar --ld=arm-ca9-linux-gnueabihf-gcc --strip=arm-ca9-linux-gnueabihf-strip --extra-cflags=-I~/x264-master/build/include --extra-ldflags=-L~/x264-master/build/lib</span><br><span class="line">make -j8</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="3-交叉编opencv"><a href="#3-交叉编opencv" class="headerlink" title="3.交叉编opencv"></a>3.交叉编opencv</h3><p>编译opencv一般使用cmake-gui,并且在选择系统是一定是Linux,而不是其他包括linux<br>在这之前需要在命令行里导入上述编译ffmpeg以及x264后的pkg-config(cmake编译后对应的pc文件)<br>可以将x264的pc文件复制到ffmpeg pkgconfig对应的位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=~/ffmpeg/arm-ca9/lib:<span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=~/ffmpeg/arm-ca9/lib/pkgconfig:<span class="variable">$PKG_CONFIG_PAT</span></span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_LIBDIR=~/ffmpeg/arm-ca9/lib:<span class="variable">$PKG_CONFIG_LIBDIR</span></span><br></pre></td></tr></table></figure><p>当看到cmake-gui 配置log Video I&#x2F;O一栏下出现FFMPEG:  YES 即可</p><p>这里会出现 FFMPEG: NO ,而主要的依赖库为YES 的问题。<br>一般是由于：RNING: Can’t build ffmpeg test code<br>解决方法：交叉编译的x264 lib include，pkg_config拷贝到ffmpeg目录下<br>         如果仍出现上述warning,打开.&#x2F;cmake&#x2F;OpenCVFindLibsVideo.cmake,修改line 261<br>         if(not __VALID_FFMPEG) -&gt; if(__VALID_FFMPEG)即可<br>同时：<br>去掉protobuf编译<br>加入build libz<br>去掉test相关(原因是opencv test.cpp无法链接ffmpeg等)<br>去掉app相关(没有用)</p><h3 id="4-验证"><a href="#4-验证" class="headerlink" title="4.验证"></a>4.验证</h3><p>当链接opencv库时出现以下时：<br>Arm platform cross-compilation opencv appears undefined reference to &#96;png_init_filter_functions_neon’</p><p>解决方法：</p><p>打开3rdparty&#x2F;libpng&#x2F;CMakeLists.txt最上面添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SET(ARM 1)</span><br><span class="line">SET(ENABLE_NEON 1)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
